{"version":3,"sources":["../src/webview.js"],"names":["canvas","document","createElement","body","appendChild","targets","context2D","getContext","constructors","Image","objects","toMessage","result","Blob","type","payload","btoa","JSON","stringify","addEventListener","parse","e","data","target","method","args","message","postMessage","key","value","constructor","object","length","push","err","innerHTML"],"mappings":"wKAAA,GAAMA,QAASC,SAASC,aAAT,CAAuB,QAAvB,CAAf,CACAD,SAASE,IAAT,CAAcC,WAAd,CAA0BJ,MAA1B,EAEA,GAAMK,SAAU,CACdL,aADc,CAEdM,UAAWN,OAAOO,UAAP,CAAkB,IAAlB,CAFG,CAAhB,CAKA,GAAMC,cAAe,CACnBC,WADmB,CAArB,CAIA,GAAMC,SAAU,EAAhB,CAEA,GAAMC,WAAY,QAAZA,UAAY,QAAU,CAC1B,GAAIC,iBAAkBC,KAAtB,CAA4B,CAC1B,MAAO,CACLC,KAAM,MADD,CAELC,QAASC,KAAKJ,MAAL,CAFJ,CAAP,CAID,CACD,MAAO,CACLE,KAAM,MADD,CAELC,QAASE,KAAKC,SAAL,CAAeN,MAAf,CAFJ,CAAP,CAID,CAXD,CAaAX,SAASkB,gBAAT,CAA0B,SAA1B,CAAqC,WAAK,iBAChBF,KAAKG,KAAL,CAAWC,EAAEC,IAAb,CADgB,CACjCR,IADiC,aACjCA,IADiC,CAC3BC,OAD2B,aAC3BA,OAD2B,CAExC,GAAI,CACF,OAAQD,IAAR,EACE,IAAK,MAAL,CAAa,wBACJS,OADI,CACoBR,OADpB,CACJQ,MADI,CACIC,MADJ,CACoBT,OADpB,CACIS,MADJ,CACYC,IADZ,CACoBV,OADpB,CACYU,IADZ,CAEX,GAAMb,QAAS,yBAAQW,MAAR,GAAgBC,MAAhB,2CAA2BC,IAA3B,EAAf,CACA,GAAMC,SAAUf,UAAUC,MAAV,CAAhB,CACAe,YAAYV,KAAKC,SAAL,CAAeQ,OAAf,CAAZ,EACA,MACD,CACD,IAAK,KAAL,CAAY,IACHH,QADG,CACmBR,OADnB,CACHQ,MADG,CACKK,GADL,CACmBb,OADnB,CACKa,GADL,CACUC,KADV,CACmBd,OADnB,CACUc,KADV,CAEVxB,QAAQkB,OAAR,EAAgBK,GAAhB,EAAuBC,KAAvB,CACA,MACD,CACD,IAAK,WAAL,CAAkB,IACTC,aADS,CACiBf,OADjB,CACTe,WADS,eACiBf,OADjB,CACIU,IADJ,CACIA,KADJ,2BACW,EADX,eAEhB,GAAMM,0CAAavB,aAAasB,YAAb,CAAb,kCAA0CL,KAA1C,MAAN,CACA,GAAMO,QAAStB,QAAQuB,IAAR,CAAaF,MAAb,CAAf,CACA,GAAML,UAAUf,UAAUqB,OAAS,CAAnB,CAAhB,CACAL,YAAYV,KAAKC,SAAL,CAAeQ,QAAf,CAAZ,EACD,CAnBH,CAqBD,CAAC,MAAOQ,GAAP,CAAY,CACZjC,SAASE,IAAT,CAAcgC,SAAd,uBAAgDD,GAAhD,UACD,CACF,CA3BD","file":"webview.js","sourcesContent":["const canvas = document.createElement('canvas');\ndocument.body.appendChild(canvas);\n\nconst targets = {\n  canvas,\n  context2D: canvas.getContext('2d'),\n};\n\nconst constructors = {\n  Image,\n};\n\nconst objects = [];\n\nconst toMessage = result => {\n  if (result instanceof Blob) {\n    return {\n      type: 'blob',\n      payload: btoa(result),\n    };\n  }\n  return {\n    type: 'json',\n    payload: JSON.stringify(result),\n  };\n};\n\ndocument.addEventListener('message', e => {\n  const {type, payload} = JSON.parse(e.data);\n  try {\n    switch (type) {\n      case 'exec': {\n        const {target, method, args} = payload;\n        const result = targets[target][method](...args);\n        const message = toMessage(result);\n        postMessage(JSON.stringify(message));\n        break;\n      }\n      case 'set': {\n        const {target, key, value} = payload;\n        targets[target][key] = value;\n        break;\n      }\n      case 'construct': {\n        const {constructor, args = []} = payload;\n        const object = new constructors[constructor](...args);\n        const length = objects.push(object);\n        const message = toMessage(length - 1);\n        postMessage(JSON.stringify(message));\n      }\n    }\n  } catch (err) {\n    document.body.innerHTML = `<div class=\"error\">${err}</div>`;\n  }\n});\n"]}