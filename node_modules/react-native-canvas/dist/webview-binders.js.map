{"version":3,"sources":["../src/webview-binders.js"],"names":["WEBVIEW_TARGET","Symbol","webviewTarget","target","prototype","targetName","webviewConstructor","onConstruction","call","postMessage","type","payload","constructor","constructorName","then","result","toJSON","__ref__","webviewMethods","method","args","methods","webviewProperties","Object","defineProperties","properties","initialValue","key","privateKey","get","set","value","forceUpdate","webviewEvents","types","onMessage","message","includes","dispatchEvent","listeners","addEventListener","callback","push","event","listener"],"mappings":"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","file":"webview-binders.js","sourcesContent":["import mapValues from 'lodash/mapValues';\n\nconst WEBVIEW_TARGET = Symbol('webviewTarget');\n\nexport const webviewTarget = targetName => target => {\n  target.prototype[WEBVIEW_TARGET] = targetName;\n};\n\nexport const webviewConstructor = constructorName => target => {\n  const {onConstruction} = target.prototype;\n  target.prototype.onConstruction = function() {\n    if (onConstruction) {\n      onConstruction.call(this);\n    }\n    this.postMessage({\n      type: 'construct',\n      payload: {\n        constructor: constructorName,\n      },\n    }).then(({result}) => {\n      this[WEBVIEW_TARGET] = result;\n    });\n  };\n  target.prototype.toJSON = function() {\n    return {__ref__: this[WEBVIEW_TARGET]};\n  };\n};\n\nexport const webviewMethods = methods => target => {\n  for (const method of methods) {\n    target.prototype[method] = function(...args) {\n      return this.postMessage({\n        type: 'exec',\n        payload: {\n          target: this[WEBVIEW_TARGET],\n          method,\n          args,\n        },\n      });\n    };\n  }\n};\n\nexport const webviewProperties = properties => target => {\n  Object.defineProperties(\n    target.prototype,\n    mapValues(properties, (initialValue, key) => {\n      const privateKey = `__${key}__`;\n      target.prototype[privateKey] = initialValue;\n      return {\n        get() {\n          return this[privateKey];\n        },\n        set(value) {\n          this.postMessage({\n            type: 'set',\n            payload: {\n              target: this[WEBVIEW_TARGET],\n              key,\n              value,\n            },\n          });\n\n          if (this.forceUpdate) {\n            this.forceUpdate();\n          }\n\n          return (this[privateKey] = value);\n        },\n      };\n    }),\n  );\n};\n\nexport const webviewEvents = types => target => {\n  const {onConstruction} = target.prototype;\n  target.prototype.onConstruction = function() {\n    if (onConstruction) {\n      onConstruction.call(this);\n    }\n    this.postMessage({\n      type: 'listen',\n      payload: {\n        types,\n      },\n    });\n    this.onMessage(message => {\n      if (message.type === 'event' && types.includes(message.payload.type)) {\n        this.dispatchEvent({\n          ...message.payload,\n          target: this,\n        });\n      }\n    });\n  };\n  target.prototype.listeners = {};\n  target.prototype.addEventListener = function(type, callback) {\n    const listeners = (this.listeners[type] = this.listeners[type] || []);\n    listeners.push(callback);\n  };\n  target.prototype.dispatchEvent = function(event) {\n    const listeners = this.listeners[event.type];\n    if (!listeners) {\n      return;\n    }\n    for (const listener of listeners) {\n      listener(event);\n    }\n  };\n};\n"]}